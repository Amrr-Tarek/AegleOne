services:
  db:
    image: postgres:latest
    container_name: postgres_db
    env_file:
      - backend/.env
    volumes:
      - backend_db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'" ]
      interval: 30s
      timeout: 10s
      retries: 5

    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/aegleone:/app
      - backend_static:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
        restart: true
    env_file:
      - backend/.env
    networks:
      - app-network

  web:
    build:
      context: ./frontend
      dockerfile: Dockerfile.web
    volumes:
      - ./frontend/aegleone:/app
    ports:
      - "8080:80" # 80 from the container to 8080 on the host
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  backend_static:
  backend_db:


networks:
  app-network:
    driver: bridge
